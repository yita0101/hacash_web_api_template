[package]
name = "hacash_web_api"
version = "0.1.0"
authors = ["{{authors}}"]
edition = "2021"

[lib]
name = "hacash_web_api"
version = "0.1.0"
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

chrono = "0.4.38"
lazy_static = "1.4.0"
concat-idents = "1.1.5"
hex = "0.4.3"
base64 = "0.22.1"
base58check = "0.1.0"
num-traits = "0.2"
num-bigint = "0.4.3"
getrandom = { version = "0.2.14", features = ["js"] }
libsecp256k1 = "0.7.0"
ripemd = "0.1.1"
sha3 = "0.10.1"
sha2 = "0.10.2"
regex = "1.10.0"
ini = "1.3.0"
dyn-clone = "1.0.17"
#leveldb-sys = "2.0.9"
#http_req = "0.10.2"
#tokio = { version = "1.37.0", features = ["rt", "rt-multi-thread", "sync", "time", "io-util", "net", "macros"] }
#ctrlc = "3.4.4"
#serde = "1.0.199"
#serde_json = "1.0.116"
#bytes = "1.6.0"
#axum = "0.7.5"
#spmc = "0.3.0"
#termsize = "0.1.9"






[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
